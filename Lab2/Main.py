import flet as ftimport osimport matplotlib.pyplot as pltimport numpy as npdef selection_sort(arr):    n = len(arr)    for min_index in range(n - 1):        least = min_index        for j in range(min_index + 1, n):            if arr[j] < arr[least]:                least = j        arr[min_index], arr[least] = arr[least], arr[min_index]    return arrdef read_file():    file_path = "list_for_sort"    if os.path.exists(file_path):        with open(file_path, 'r') as file:            try:                return list(map(int, file.read().split()))            except ValueError:                return None    return Nonedef generate_complexity_plot():    n_values = np.arange(1, 101)    complexity = n_values ** 2    plt.figure(figsize=(5, 3))    plt.plot(n_values, complexity, label="O(n^2)", color="blue")    plt.xlabel("n")    plt.ylabel("Operations")    plt.title("Складність O(n^2)")    plt.legend()    plt.grid()    plt.savefig("complexity.png")def main(page: ft.Page):    page.bgcolor = "white"  # Білий фон    page.theme = ft.Theme(color_scheme_seed="black")  # Чорний текст    page.title = "Сортування вибором"    input_field = ft.TextField(label="Введіть числа через пробіл", bgcolor="white", color="black")    result_text = ft.Text("Результат сортування: ", color="black")    def on_sort(e):        try:            numbers = list(map(int, input_field.value.split()))            sorted_numbers = selection_sort(numbers)            result_text.value = f"Результат сортування: {sorted_numbers}"            page.update()        except ValueError:            result_text.value = "Помилка: введіть коректні числа"            page.update()    def on_sort_file(e):        numbers = read_file()        if numbers is not None:            sorted_numbers = selection_sort(numbers)            result_text.value = f"Результат сортування: {sorted_numbers}"        else:            result_text.value = "Помилка: не вдалося прочитати файл"        page.update()    generate_complexity_plot()    image = ft.Image(src="complexity.png", width=500, height=300)    main_tab = ft.Column([        ft.Text("Програма сортування вибором", color="black"),        input_field,        ft.ElevatedButton("Сортувати", on_click=on_sort),        ft.ElevatedButton("Сортувати з файлу", on_click=on_sort_file),        result_text    ])    algorithm_tab = ft.Column([        ft.Text("Автор: \n   Рибачок Михайло Володимирович \n   ІО-34 Варіант 17", size=24,                weight=ft.FontWeight.BOLD, color="black"),    ])    complexity_tab = ft.Column([        ft.Text("Графік складності O(n^2)", size=20, weight=ft.FontWeight.BOLD, color="black"),        image    ])    tabs = ft.Tabs(        selected_index=0,        tabs=[            ft.Tab(text="Головна", content=algorithm_tab),            ft.Tab(text="Алгоритм", content=main_tab),            ft.Tab(text="Складність", content=complexity_tab)        ]    )    page.add(tabs)ft.app(target=main)